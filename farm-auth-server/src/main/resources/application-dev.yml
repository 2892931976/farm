spring:  
  redis:
    database: 2
    host: ${REDIS_HOST:localhost}
    port: ${REDIS_PORT:6379}
    pool:
      x-active: 20
  datasource:
      name: test
      url: jdbc:mysql://${MYSQL_HOST:localhost}:${MYSQL_PORT:3306}/ag_auth_v1?useUnicode=true&characterEncoding=UTF8
      username: root
      password: root
      driver-class-name: com.mysql.jdbc.Driver      
      hikari:
        minimum-idel: 10
        maximum-pool-size: 10
        auto-commit: true
        idle-timeout: 30000
        pool-name: MyHikariCP
        max-lifetime: 1800000
        read-only: false
        connection-time: 30000
        connection-test-query: select 1
      
      
      # 使用druid数据源
#      type: com.alibaba.druid.pool.DruidDataSource
#      filters: stat
#      maxActive: 20
#      initialSize: 1
#      maxWait: 60000
#      minIdle: 1
#      timeBetweenEvictionRunsMillis: 60000
#      minEvictableIdleTimeMillis: 300000
#      validationQuery: select 'x'
#      testWhileIdle: true
#      testOnBorrow: false
#      testOnReturn: false
#      poolPreparedStatements: true
#      maxOpenPreparedStatements: 20
  sleuth:
      enabled: true
      http:
        legacy:
          enabled: true

mybatis:
    basepackage: com.farm.auth.server.mapper
    xmlLocation: classpath:mapper/**/*.xml
    mapper-locations: "classpath*:mapper/*.xml"

feign:
  httpclient:
    enabled: false
  okhttp:
    enabled: true

ribbon:
  eureka:
    enabled: true
  ReadTimeout: 60000
  ConnectTimeout: 60000
  MaxAutoRetries: 0
  MaxAutoRetriesNextServer: 1
  OkToRetryOnAllOperations: false

hystrix:
  threadpool:
    default:
      coreSize: 1000 ##并发执行的最大线程数，默认10
      maxQueueSize: 1000 ##BlockingQueue的最大队列数
      queueSizeRejectionThreshold: 500 ##即使maxQueueSize没有达到，达到queueSizeRejectionThreshold该值后，请求也会被拒绝
  command:
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 10000

eureka:
    instance:
        statusPageUrlPath: /actuator/info
        healthCheckUrlPath: /actuator/health
        # docker 部署开启
        prefer-ip-address: true
        ip-address: 127.0.0.1
    client:
        serviceUrl:
            defaultZone: http://localhost:8761/eureka/
            # docker 部署开启
            # defaultZone: http://${EUREKA_HOST:localhost}:${EUREKA_PORT:8761}/eureka/

jwt:
  token-header: Authorization
  expire: 14400
  rsa-secret: xx1WET12^%3^(WE45

client:
  id: farm-auth-server
  secret: 123456
  token-header: x-client-token
  expire: 14400
  rsa-secret: x2318^^(*WRYQWR(QW&T
